{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["appConstants","App","useState","city","setCity","weather","setWeather","dateInformation","d","Date","day","getDay","date","getDate","month","getMonth","year","getFullYear","getDateInformation","submit","fetch","then","response","status","json","Error","data","console","log","catch","error","alert","useEffect","className","type","placeholder","value","onChange","e","target","onClick","src","icon","parseInt","main","temp","name","sys","country","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,mBCMTA,EACI,mCADJA,EAEK,kDAFLA,EAGG,SAHHA,EAKM,oCA0GGC,MAnEf,WAEE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAzCR,WACE,IAuBMC,EAAI,IAAIC,KAKd,MAAO,CACLC,IAfW,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAGeF,EAAEG,UAMjBC,KALWJ,EAAEK,UAMbC,MA/Ba,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OAcmBN,EAAEO,YAMrBC,KALWR,EAAES,eAaSC,GAE1B,SAASC,IAEPC,MAAM,GAAD,OACApB,EADA,cAC0BG,GAAU,YADpC,kBACyDH,EADzD,kBACqFA,IAEvFqB,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACX,OAAOD,EAASE,OAElB,MAAMC,MAAM,2BAEbJ,MAAK,SAACK,GAELpB,EAAWoB,GACXC,QAAQC,IAAIvB,MAGbwB,OAAM,SAACC,GACNH,QAAQG,MAAMA,GACdC,MAAM,gCAUV,OAJFC,qBAAU,WAERb,MACA,IAEE,mCACA,sBAAKc,UAAW,WAAhB,UACA,sBAAKA,UAAW,YAAhB,UACE,uBAAOA,UAAW,cAClBC,KAAK,OACLC,YAAY,kBACZC,MAAOjC,EACPkC,SAAU,SAACC,GAAD,OAAOlC,EAAQkC,EAAEC,OAAOH,UAElC,wBAAQI,QAASrB,EAAjB,SACE,cAAC,IAAD,SAGJ,sBAAKc,UAAW,iBAAhB,UAEA,qBAAKQ,IAAKpC,EAAQ,UAAGL,GAAH,UAA+BK,EAAQA,QAAQ,GAAGqC,KAAlD,QAA6D,6CAC7E,qBAAIT,UAAU,cAAd,UAA6B5B,EAAQsC,SAAStC,EAAQuC,KAAKC,MAAM,gBAAjE,WAEA,oBAAIZ,UAAU,cAAd,SAA6B5B,EAAQA,EAAQyC,KAAK,kBAClD,oBAAIb,UAAU,cAAd,SAA8B1B,EAAgBG,MAC9C,qBAAIuB,UAAU,cAAd,UAA8B1B,EAAgBK,KAA9C,IAAqDL,EAAgBO,MAArE,IAA6EP,EAAgBS,KAA7F,OACA,oBAAIiB,UAAU,cAAd,SAA8B5B,EAAQA,EAAQ0C,IAAIC,QAAQ,kBAC1D,oBAAIf,UAAU,cAAd,SAA6B5B,EAAQA,EAAQA,QAAQ,GAAGuC,KAAK,kBAC7D,mBAAGX,UAAU,cAAb,SAA4B5B,EAAQA,EAAQA,QAAQ,GAAG4C,YAAY,2BCjG1DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adbe6f0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState} from 'react';\nimport { BsSearch } from 'react-icons/bs'\n\n\nconst appConstants = {\n  apiKey: \"f767a11b24fd482a6c98df730f9398d9\",\n  baseUrl: \"https://api.openweathermap.org/data/2.5/weather\",\n  units: \"metric\",\n  unknownValue: \"NA\",\n  imageUrl: \"http://openweathermap.org/img/wn/\",\n}\nfunction getDateInformation() {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const d = new Date();\n  const day = days[d.getDay()];\n  const date = d.getDate();\n  const month = months[d.getMonth()];\n  const year = d.getFullYear();\n  return {\n    day,\n    date,\n    month,\n    year,\n  };\n}\n\nfunction App() {\n\n  const [city,setCity] = useState(\"\");  \n  const [weather,setWeather] =useState();\n  const dateInformation = getDateInformation();\n\nfunction submit(){\n  \n  fetch(\n    `${appConstants.baseUrl}?q=${city?city:\"hyderabad\"}&units=${appConstants.units}&APPID=${appConstants.apiKey}`\n  )\n    .then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      throw Error(\"Error fetching data.\");\n    })\n    .then((data) => {\n    \n      setWeather(data);   \n      console.log(weather);\n\n    })\n    .catch((error) => {\n      console.error(error);\n      alert(`Error getting information`);\n    });\n\n\n}\n\nuseEffect(() =>\n{\n  submit()\n},[]);\n  return (\n    <>\n    <div className={\"outerdiv\"}>\n    <div className={\"searchbox\"}>\n      <input className={\"searchinput\"}\n      type=\"text\"\n      placeholder=\"Enter City Name\"\n      value={city}\n      onChange={(e) => setCity(e.target.value)}\n      />  \n      <button onClick={submit}>\n        <BsSearch/>\n      </button>\n    </div>\n    <div className={\"weatherDisplay\"}>\n      \n    <img src={weather?`${appConstants.imageUrl}`+ `${weather.weather[0].icon}.png`:\"http://openweathermap.org/img/wn/50d.png\"}/>\n      <h1 className=\"weatherinfo\">{weather?parseInt(weather.main.temp):\"Fetching data\"}&deg;C</h1>\n      \n      <h1 className=\"weatherinfo\">{weather?weather.name:\"Fetching data\"}</h1>\n      <h2 className=\"weatherinfo\" >{dateInformation.day}</h2>\n      <h3 className=\"weatherinfo\" >{dateInformation.date} {dateInformation.month} {dateInformation.year} </h3>\n      <h2 className=\"weatherinfo\" >{weather?weather.sys.country:\"Fetching data\"}</h2>\n      <h3 className=\"weatherinfo\">{weather?weather.weather[0].main:\"Fetching data\"}</h3>\n      <p className=\"weatherinfo\">{weather?weather.weather[0].description:\"Fetching data\"}</p>\n    \n    </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}